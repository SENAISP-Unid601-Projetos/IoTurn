
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.InteracaoIAScalarFieldEnum = {
  id: 'id',
  perguntaUsuario: 'perguntaUsuario',
  queryMontada: 'queryMontada',
  respostaHumanizada: 'respostaHumanizada',
  feedbackUsuario: 'feedbackUsuario',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm',
  hyperparameterArmId: 'hyperparameterArmId'
};

exports.Prisma.HyperparameterArmScalarFieldEnum = {
  id: 'id',
  modelName: 'modelName',
  version: 'version',
  temperature: 'temperature',
  topP: 'topP',
  topK: 'topK',
  maxOutputTokens: 'maxOutputTokens',
  responseMimeType: 'responseMimeType',
  successes: 'successes',
  failures: 'failures',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  cnpj: 'cnpj',
  phone: 'phone',
  address: 'address',
  email: 'email',
  password: 'password',
  contractDate: 'contractDate',
  status: 'status'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  userType: 'userType',
  status: 'status',
  clientId: 'clientId',
  createdAt: 'createdAt'
};

exports.Prisma.MachineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  model: 'model',
  manufacturer: 'manufacturer',
  serialNumber: 'serialNumber',
  status: 'status',
  clientId: 'clientId',
  responsibleUserId: 'responsibleUserId',
  deviceId: 'deviceId'
};

exports.Prisma.UnifiedMachineStateScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  machineId: 'machineId',
  current: 'current',
  rpm: 'rpm',
  oilTemperature: 'oilTemperature',
  oilLevel: 'oilLevel',
  clusterPredict: 'clusterPredict',
  clusterStrength: 'clusterStrength',
  currentIsMissing: 'currentIsMissing',
  rpmIsMissing: 'rpmIsMissing',
  oilTemperatureIsMissing: 'oilTemperatureIsMissing',
  oilLevelIsMissing: 'oilLevelIsMissing'
};

exports.Prisma.DeviceScalarFieldEnum = {
  id: 'id',
  nodeId: 'nodeId',
  description: 'description',
  status: 'status',
  lastHeartbeat: 'lastHeartbeat',
  gatewayId: 'gatewayId',
  clientId: 'clientId'
};

exports.Prisma.GatewayScalarFieldEnum = {
  id: 'id',
  gatewayId: 'gatewayId',
  description: 'description',
  status: 'status',
  lastHeartbeat: 'lastHeartbeat',
  clientId: 'clientId'
};

exports.Prisma.RpmReadingScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  rpm: 'rpm',
  machineId: 'machineId',
  userId: 'userId'
};

exports.Prisma.OilTemperatureReadingScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  temperature: 'temperature',
  machineId: 'machineId',
  userId: 'userId'
};

exports.Prisma.OilLevelReadingScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  level: 'level',
  machineId: 'machineId',
  userId: 'userId'
};

exports.Prisma.CurrentReadingScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  current: 'current',
  machineId: 'machineId',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Status = exports.$Enums.Status = {
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  CANCELED: 'CANCELED'
};

exports.UserType = exports.$Enums.UserType = {
  ADMIN: 'ADMIN',
  TECHNICIAN: 'TECHNICIAN',
  VIEWER: 'VIEWER'
};

exports.DeviceStatus = exports.$Enums.DeviceStatus = {
  ONLINE: 'ONLINE',
  OFFLINE: 'OFFLINE',
  PROVISIONING: 'PROVISIONING',
  ERROR: 'ERROR',
  CANCELED: 'CANCELED'
};

exports.Prisma.ModelName = {
  InteracaoIA: 'InteracaoIA',
  HyperparameterArm: 'HyperparameterArm',
  Client: 'Client',
  User: 'User',
  Machine: 'Machine',
  UnifiedMachineState: 'UnifiedMachineState',
  Device: 'Device',
  Gateway: 'Gateway',
  RpmReading: 'RpmReading',
  OilTemperatureReading: 'OilTemperatureReading',
  OilLevelReading: 'OilLevelReading',
  CurrentReading: 'CurrentReading'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Aluno\\Desktop\\IoTurn\\prisma\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Aluno\\Desktop\\IoTurn\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel InteracaoIA {\n  id                  Int               @id @default(autoincrement())\n  perguntaUsuario     String\n  queryMontada        String\n  respostaHumanizada  String\n  feedbackUsuario     Int?\n  criadoEm            DateTime          @default(now())\n  atualizadoEm        DateTime          @updatedAt\n  hyperparameterArmId String\n  hyperparameterArm   HyperparameterArm @relation(fields: [hyperparameterArmId], references: [id])\n}\n\nmodel HyperparameterArm {\n  id               String        @id @default(uuid())\n  modelName        String?\n  version          String?\n  temperature      Float\n  topP             Float\n  topK             Int\n  maxOutputTokens  Int\n  responseMimeType String\n  successes        Int?          @default(0)\n  failures         Int?          @default(0)\n  createdAt        DateTime      @default(now())\n  updatedAt        DateTime      @updatedAt\n  interacoes       InteracaoIA[]\n}\n\n/// Representa a empresa cliente que contrata o serviço IoTurn.\nmodel Client {\n  id           Int       @id @default(autoincrement())\n  companyName  String\n  cnpj         String    @unique\n  phone        String?\n  address      String?\n  email        String    @unique\n  password     String\n  contractDate DateTime  @default(now())\n  status       Status    @default(ACTIVE)\n  machines     Machine[]\n  users        User[]\n  devices      Device[]\n  gateways     Gateway[]\n\n  @@map(\"clients\")\n}\n\n/// Usuários que podem acessar a plataforma, associados a um cliente.\nmodel User {\n  id                     Int                     @id @default(autoincrement())\n  name                   String\n  email                  String                  @unique\n  password               String\n  userType               UserType\n  status                 Status                  @default(ACTIVE)\n  clientId               Int\n  createdAt              DateTime                @default(now())\n  currentReadings        CurrentReading[]        @relation(\"CurrentReadings\")\n  responsibleMachines    Machine[]               @relation(\"ResponsibleForMachines\")\n  oilLevelReadings       OilLevelReading[]       @relation(\"OilLevelReadings\")\n  oilTemperatureReadings OilTemperatureReading[] @relation(\"OilTemperatureReadings\")\n  rpmReadings            RpmReading[]            @relation(\"RpmReadings\")\n  client                 Client                  @relation(fields: [clientId], references: [id])\n\n  @@map(\"users\")\n}\n\n/// Representa uma máquina industrial monitorada.\nmodel Machine {\n  id                     Int                     @id @default(autoincrement())\n  name                   String\n  model                  String?\n  manufacturer           String?\n  serialNumber           String                  @unique\n  status                 Status                  @default(ACTIVE)\n  clientId               Int\n  responsibleUserId      Int?\n  deviceId               Int?                    @unique\n  UnifiedMachineState    UnifiedMachineState[]\n  currentReadings        CurrentReading[]        @relation(\"CurrentReadings\")\n  client                 Client                  @relation(fields: [clientId], references: [id])\n  device                 Device?                 @relation(fields: [deviceId], references: [id])\n  responsibleUser        User?                   @relation(\"ResponsibleForMachines\", fields: [responsibleUserId], references: [id])\n  oilLevelReadings       OilLevelReading[]       @relation(\"OilLevelReadings\")\n  oilTemperatureReadings OilTemperatureReading[] @relation(\"OilTemperatureReadings\")\n  rpmReadings            RpmReading[]            @relation(\"RpmReadings\")\n\n  @@map(\"machines\")\n}\n\nmodel UnifiedMachineState {\n  id                      String   @id @default(cuid())\n  timestamp               DateTime @db.Timestamptz(3)\n  machineId               Int\n  current                 Float?\n  rpm                     Int?\n  oilTemperature          Float?\n  oilLevel                Float?\n  clusterPredict          Int?\n  clusterStrength         Float?\n  currentIsMissing        Boolean  @default(false)\n  rpmIsMissing            Boolean  @default(false)\n  oilTemperatureIsMissing Boolean  @default(false)\n  oilLevelIsMissing       Boolean  @default(false)\n  machine                 Machine  @relation(fields: [machineId], references: [id])\n\n  @@index([machineId, timestamp])\n}\n\nmodel Device {\n  id            Int          @id @default(autoincrement())\n  nodeId        String       @unique\n  description   String?\n  status        DeviceStatus @default(PROVISIONING)\n  lastHeartbeat DateTime     @updatedAt\n  gatewayId     Int?\n  gateway       Gateway?     @relation(fields: [gatewayId], references: [id])\n  machine       Machine?\n  clientId      Int\n  client        Client       @relation(fields: [clientId], references: [id])\n\n  @@map(\"devices\")\n}\n\n/// Representa o hardware físico do Gateway (ESP32 com Wi-Fi).\nmodel Gateway {\n  id             Int          @id @default(autoincrement())\n  gatewayId      String       @unique\n  description    String?\n  status         DeviceStatus @default(OFFLINE)\n  lastHeartbeat  DateTime     @updatedAt\n  responsibleFor Device[]\n  clientId       Int\n  client         Client       @relation(fields: [clientId], references: [id])\n\n  @@map(\"gateways\")\n}\n\n/// Armazena as leituras dos sensores de uma máquina em um ponto no tempo.\nmodel RpmReading {\n  id        Int      @id @default(autoincrement())\n  timestamp DateTime @default(now())\n  rpm       Int\n  machineId Int\n  userId    Int?\n  machine   Machine  @relation(\"RpmReadings\", fields: [machineId], references: [id])\n  user      User?    @relation(\"RpmReadings\", fields: [userId], references: [id])\n\n  @@map(\"rpm_readings\")\n}\n\nmodel OilTemperatureReading {\n  id          Int      @id @default(autoincrement())\n  timestamp   DateTime @default(now())\n  temperature Float\n  machineId   Int\n  userId      Int?\n  machine     Machine  @relation(\"OilTemperatureReadings\", fields: [machineId], references: [id])\n  user        User?    @relation(\"OilTemperatureReadings\", fields: [userId], references: [id])\n\n  @@map(\"oil_temperature_readings\")\n}\n\nmodel OilLevelReading {\n  id        Int      @id @default(autoincrement())\n  timestamp DateTime @default(now())\n  level     Float\n  machineId Int\n  userId    Int?\n  machine   Machine  @relation(\"OilLevelReadings\", fields: [machineId], references: [id])\n  user      User?    @relation(\"OilLevelReadings\", fields: [userId], references: [id])\n\n  @@map(\"oil_level_readings\")\n}\n\nmodel CurrentReading {\n  id        Int      @id @default(autoincrement())\n  timestamp DateTime @default(now())\n  current   Float\n  machineId Int\n  userId    Int?\n  machine   Machine  @relation(\"CurrentReadings\", fields: [machineId], references: [id])\n  user      User?    @relation(\"CurrentReadings\", fields: [userId], references: [id])\n\n  @@map(\"current_readings\")\n}\n\n/// Status geral para clientes, usuários e máquinas.\nenum Status {\n  ACTIVE\n  SUSPENDED\n  CANCELED\n}\n\n/// Tipos de perfil de usuário dentro da plataforma.\nenum UserType {\n  ADMIN\n  TECHNICIAN\n  VIEWER\n}\n\n/// Enum para o status do dispositivo\nenum DeviceStatus {\n  ONLINE\n  OFFLINE\n  PROVISIONING\n  ERROR\n  CANCELED\n}\n",
  "inlineSchemaHash": "f3b4c78f01cdfadae004817f16262e40fbce6b558ff74c66a55371311b657343",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"InteracaoIA\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"perguntaUsuario\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"queryMontada\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respostaHumanizada\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedbackUsuario\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"criadoEm\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"atualizadoEm\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hyperparameterArmId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hyperparameterArm\",\"kind\":\"object\",\"type\":\"HyperparameterArm\",\"relationName\":\"HyperparameterArmToInteracaoIA\"}],\"dbName\":null},\"HyperparameterArm\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"temperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"topP\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"topK\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxOutputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responseMimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"successes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"failures\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"interacoes\",\"kind\":\"object\",\"type\":\"InteracaoIA\",\"relationName\":\"HyperparameterArmToInteracaoIA\"}],\"dbName\":null},\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cnpj\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"machines\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"ClientToMachine\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientToUser\"},{\"name\":\"devices\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"ClientToDevice\"},{\"name\":\"gateways\",\"kind\":\"object\",\"type\":\"Gateway\",\"relationName\":\"ClientToGateway\"}],\"dbName\":\"clients\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userType\",\"kind\":\"enum\",\"type\":\"UserType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentReadings\",\"kind\":\"object\",\"type\":\"CurrentReading\",\"relationName\":\"CurrentReadings\"},{\"name\":\"responsibleMachines\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"ResponsibleForMachines\"},{\"name\":\"oilLevelReadings\",\"kind\":\"object\",\"type\":\"OilLevelReading\",\"relationName\":\"OilLevelReadings\"},{\"name\":\"oilTemperatureReadings\",\"kind\":\"object\",\"type\":\"OilTemperatureReading\",\"relationName\":\"OilTemperatureReadings\"},{\"name\":\"rpmReadings\",\"kind\":\"object\",\"type\":\"RpmReading\",\"relationName\":\"RpmReadings\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToUser\"}],\"dbName\":\"users\"},\"Machine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responsibleUserId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"UnifiedMachineState\",\"kind\":\"object\",\"type\":\"UnifiedMachineState\",\"relationName\":\"MachineToUnifiedMachineState\"},{\"name\":\"currentReadings\",\"kind\":\"object\",\"type\":\"CurrentReading\",\"relationName\":\"CurrentReadings\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToMachine\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToMachine\"},{\"name\":\"responsibleUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResponsibleForMachines\"},{\"name\":\"oilLevelReadings\",\"kind\":\"object\",\"type\":\"OilLevelReading\",\"relationName\":\"OilLevelReadings\"},{\"name\":\"oilTemperatureReadings\",\"kind\":\"object\",\"type\":\"OilTemperatureReading\",\"relationName\":\"OilTemperatureReadings\"},{\"name\":\"rpmReadings\",\"kind\":\"object\",\"type\":\"RpmReading\",\"relationName\":\"RpmReadings\"}],\"dbName\":\"machines\"},\"UnifiedMachineState\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"machineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"current\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"rpm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"oilTemperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"oilLevel\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"clusterPredict\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clusterStrength\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentIsMissing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rpmIsMissing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"oilTemperatureIsMissing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"oilLevelIsMissing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"machine\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"MachineToUnifiedMachineState\"}],\"dbName\":null},\"Device\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DeviceStatus\"},{\"name\":\"lastHeartbeat\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gatewayId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gateway\",\"kind\":\"object\",\"type\":\"Gateway\",\"relationName\":\"DeviceToGateway\"},{\"name\":\"machine\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"DeviceToMachine\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToDevice\"}],\"dbName\":\"devices\"},\"Gateway\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gatewayId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DeviceStatus\"},{\"name\":\"lastHeartbeat\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"responsibleFor\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToGateway\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToGateway\"}],\"dbName\":\"gateways\"},\"RpmReading\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rpm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"machineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"machine\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"RpmReadings\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RpmReadings\"}],\"dbName\":\"rpm_readings\"},\"OilTemperatureReading\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"temperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"machineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"machine\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"OilTemperatureReadings\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OilTemperatureReadings\"}],\"dbName\":\"oil_temperature_readings\"},\"OilLevelReading\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"machineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"machine\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"OilLevelReadings\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OilLevelReadings\"}],\"dbName\":\"oil_level_readings\"},\"CurrentReading\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"current\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"machineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"machine\",\"kind\":\"object\",\"type\":\"Machine\",\"relationName\":\"CurrentReadings\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CurrentReadings\"}],\"dbName\":\"current_readings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

